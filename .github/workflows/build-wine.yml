name: Wine (True WOW64 for Termux with Vulkan and Full GStreamer)

on:
  workflow_dispatch:

permissions:
  contents: write  # 允许创建 Release

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
    - name: 安装构建依赖
      run: |
        sudo apt update
        sudo apt --fix-broken install -y
        sudo apt install -y \
          debootstrap perl git wget xz-utils bubblewrap \
          autoconf flex bison gcc-multilib g++-multilib \
          libx11-dev libxext-dev libxi-dev libxrandr-dev \
          libxcursor-dev libxcomposite-dev libxdamage-dev \
          libxfixes-dev libxxf86vm-dev libxrender-dev libxinerama-dev \
          libgl-dev libglu-dev libosmesa6-dev libfreetype6-dev \
          libfontconfig1-dev libpcap-dev libdbus-1-dev libssl-dev \
          libasound2-dev libpulse-dev libudev-dev libcups2-dev \
          libjpeg-dev libpng-dev libtiff-dev libxml2-dev \
          libvulkan-dev vulkan-tools libvulkan1 mesa-vulkan-drivers \
          mingw-w64 gettext libgettextpo-dev locales language-pack-zh-hans \
          libunwind-dev \
          libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
          libmpg123-dev libopenal-dev

    - name: 设置中文语言环境
      run: |
        sudo locale-gen zh_CN.UTF-8
        sudo update-locale LANG=zh_CN.UTF-8
        export LANG=zh_CN.UTF-8
        export LC_ALL=zh_CN.UTF-8

    - name: 检查工作目录
      run: |
        echo "当前工作目录: $(pwd)"
        ls -la

    - name: 克隆 Wine 源码
      run: |
        git clone https://gitlab.winehq.org/wine/wine.git

    - name: 应用自定义补丁
      run: |
        cd wine
        echo "应用补丁: wine_do_not_create_dxgi_manager2.patch"
        patch -p1 < ../wine_do_not_create_dxgi_manager2.patch

    - name: 修复 Termux 临时路径
      run: |
        cd wine
        TMP_PATH="/data/data/com.termux/files/usr/tmp"
        echo "将 /tmp 替换为 $TMP_PATH"
        find . -type f \( -name "*.c" -o -name "*.h" -o -name "*.in" -o -name "*.spec" \) \
          -exec sed -i "s|/tmp|$TMP_PATH|g" {} +

    - name: 配置和构建 WOW64 Wine
      run: |
        cd wine
        mkdir -p /tmp/wine-install
        chmod 777 -R /tmp/wine-install
        mkdir -p build-wow64
        cd build-wow64
        ../configure \
          --enable-win64 \
          --enable-archs=i386,x86_64 \
          --prefix=/tmp/wine-install \
          --with-x \
          --with-vulkan \
          --with-alsa \
          --with-pulse \
          --with-cups \
          --with-freetype \
          --with-fontconfig \
          --with-gstreamer \
          --with-gettext \
          --enable-nls \
          --without-dbus \
          --without-sane \
          --without-pcap \
          --without-pcsclite \
          --disable-winemenubuilder \
          --disable-win16 \
          --disable-tests \
          --without-capi \
          --without-coreaudio \
          --without-gphoto \
          --without-osmesa \
          --without-oss \
          --without-udev \
          --without-unwind \
          --without-usb \
          --without-v4l2 \
          --without-wayland
        echo "开始构建 WOW64 Wine..."
        make -j$(nproc)

    - name: 安装 Wine 并获取版本信息
      run: |
        cd wine/build-wow64
        make install
        cd ..
        VERSION=$(git describe --tags --abbrev=0)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Wine 版本: $VERSION"

    - name: 验证 Vulkan 和 GStreamer 支持
      run: |
        echo "检查 Vulkan 支持..."
        [ -f "/tmp/wine-install/bin/wine" ] && echo "Wine 二进制文件存在" || { echo "错误: Wine 二进制文件不存在"; exit 1; }
        find /tmp/wine-install -name "*vulkan*" | head -10
        find /tmp/wine-install -name "winevulkan.dll*" | head -5
        echo "检查 GStreamer 支持..."
        find /tmp/wine-install -name "*gst*" | head -10

    - name: 打包 Wine
      run: |
        cd /tmp
        tar -czvf wine-wow64-${{ env.VERSION }}.tar.gz -C /tmp wine-install

    - name: 上传 Artifact
      uses: actions/upload-artifact@v4
      with:
        name: wine-wow64-${{ env.VERSION }}
        path: /tmp/wine-wow64-${{ env.VERSION }}.tar.gz

    - name: 发布到 GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Wine WOW64 ${{ env.VERSION }} (Vulkan + GStreamer)
        files: /tmp/wine-wow64-${{ env.VERSION }}.tar.gz
